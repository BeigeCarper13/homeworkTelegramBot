import random

import mysql
import telebot
from telebot import types
import time
import mysql.connector as sql

conn = sql.connect(host="localhost", user="root", password="mySQL2341m", database="mydb",
                   auth_plugin='caching_sha2_password')

cursor = conn.cursor()

lessonslist = [{'–ì–ï–û–ì–†–ê–§':'geogr'},{'–ë–ò–û–õ–û–ì':'biolog'},{'–§–ò–ó–ò–ö':'phisic'},{'–•–ò–ú–ò–Ø':'xim'},{'–¢–†–£–î':'trud'},
               {'–ò–°–ö–£–°–°–¢–í':'isk'}]



deletem = []

bot = telebot.TeleBot('1876503650:AAH_sMeqFTVZx5PkW6dktrLKKJtIsPYkNck')


@bot.message_handler(content_types=['text'])
def start(message):
    global status

    cursor.execute(f"""INSERT ignore `mydb`.`status`(`id`,`status`)VALUES({message.from_user.id}, {1})""")

    cursor.execute(f"""SELECT status From`mydb`.`status` WHERE (`id` = {message.from_user.id});""")

    rows1 = cursor.fetchall()
    for row1 in rows1:
        status = str(row1)[2:len(row1) - 4]

    if status == '2':
        if message.text == '–ê–ù–ì–õ –Ø–ó':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("1 –ì—Ä—É–ø–ø–∞")
            btn2 = types.KeyboardButton("2 –ì—Ä—É–ø–ø–∞")
            markup.add(btn1, btn2)
            deletem.append(bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç", reply_markup=markup))
            bot.register_next_step_handler(message, switchadd, 'eng1', 'eng2', '1 –ì—Ä—É–ø–ø–∞', '2 –ì—Ä—É–ø–ø–∞')

        elif message.text == '–†–£–°–°':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("–õ–ò–¢–†–ê")
            btn2 = types.KeyboardButton("–Ø–ó–´–ö")
            markup.add(btn1, btn2)
            deletem.append(bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç", reply_markup=markup))
            bot.register_next_step_handler(message, switchadd, 'rusl', 'rusy', '–õ–ò–¢–†–ê', '–Ø–ó–´–ö')

        elif message.text == '–ë–ï–õ':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("–õ–ò–¢–†–ê")
            btn2 = types.KeyboardButton("–Ø–ó–´–ö")
            markup.add(btn1, btn2)
            deletem.append(bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç", reply_markup=markup))
            bot.register_next_step_handler(message, switchadd, 'bell', 'bely', "–õ–ò–¢–†–ê", '–Ø–ó–´–ö')

        elif message.text == '–ú–ê–¢–ï–ú':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("–ê–õ–ì–ï–ë–†")
            btn2 = types.KeyboardButton("–ì–ï–û–ú–ï–¢–†")
            markup.add(btn1, btn2)
            deletem.append(bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç", reply_markup=markup))
            bot.register_next_step_handler(message, switchadd, 'algebr', 'geom', "–ê–õ–ì–ï–ë–†", '–ì–ï–û–ú–ï–¢–†')

        elif message.text == '–ò–ù–§–û–†–ú':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("1 –ì–†–£–ü–üA")
            btn2 = types.KeyboardButton("2 –ì–†–£–ü–üA")
            markup.add(btn1, btn2)
            deletem.append(bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç", reply_markup=markup))
            bot.register_next_step_handler(message, switchadd, '1g', '2g', "1 –ì–†–£–ü–üA", '2 –ì–†–£–ü–üA')

        elif message.text == '–ò–°–¢–û–†–ò–Ø':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("–í–°–ï–ú–ò–†")
            btn2 = types.KeyboardButton("–ë–ï–õ")
            markup.add(btn1, btn2)
            deletem.append(bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç", reply_markup=markup))
            bot.register_next_step_handler(message, switchadd, 'vsem', 'bel', "–í–°–ï–ú–ò–†", '–ë–ï–õ')

        elif message.text == '–§–ò–ó–†–ê':
            bot.send_message(message.from_user.id, "–ï—Å–ª–∏ —Ç—ã —Å–µ—Ä—å—ë–∑–Ω–æ —Ö–æ—á–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å –¥–∑ –ø–æ —Ñ–∏–∑—Ä–µ, —Ç–æ —Ç—ã —Ä–µ–∞–ª —Å—É–º–∞—à–µ–¥—à–∏–π")

        elif message.text == '–ì–ï–û–ì–†–ê–§' or message.text == '–ë–ò–û–õ–û–ì' or message.text == '–§–ò–ó–ò–ö' or \
                message.text == '–•–ò–ú–ò–Ø' or message.text == '–¢–†–£–î' or message.text == '–ò–°–ö–£–°–°–¢–í':
            for i in lessonslist:
                if str(message.text) == str(i.keys())[12:len(i.keys()) - 4]:
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    btn1 = types.KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")
                    markup.add(btn1)
                    deletem.append(bot.send_message(message.from_user.id, f"–ù–∞–ø–∏—à–∏—Ç–µ –¥–∑", reply_markup=markup))
                    bot.register_next_step_handler(message, adddz, i[str(message.text)])

        elif message.text != '–ü—Ä–µ–¥–º–µ—Ç 3':
            lessons(message)
            conn.commit()

    elif status == '3':
        if message.text == '–ê–ù–ì–õ –Ø–ó':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("1 –ì—Ä—É–ø–ø–∞")
            btn2 = types.KeyboardButton("2 –ì—Ä—É–ø–ø–∞")
            markup.add(btn1, btn2)
            deletem.append(bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç", reply_markup=markup))
            bot.register_next_step_handler(message, switchwatch, 'eng1', 'eng2', '1 –ì—Ä—É–ø–ø–∞', '2 –ì—Ä—É–ø–ø–∞')

        elif message.text == '–†–£–°–°':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("–õ–ò–¢–†–ê")
            btn2 = types.KeyboardButton("–Ø–ó–´–ö")
            markup.add(btn1, btn2)
            deletem.append(bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç", reply_markup=markup))
            bot.register_next_step_handler(message, switchwatch, 'rusl', 'rusy', '–õ–ò–¢–†–ê', '–Ø–ó–´–ö')

        elif message.text == '–ë–ï–õ':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("–õ–ò–¢–†–ê")
            btn2 = types.KeyboardButton("–Ø–ó–´–ö")
            markup.add(btn1, btn2)
            deletem.append(bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç", reply_markup=markup))
            bot.register_next_step_handler(message, switchwatch, 'bell', 'bely', "–õ–ò–¢–†–ê", '–Ø–ó–´–ö')

        elif message.text == '–ú–ê–¢–ï–ú':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("–ê–õ–ì–ï–ë–†")
            btn2 = types.KeyboardButton("–ì–ï–û–ú–ï–¢–†")
            markup.add(btn1, btn2)
            deletem.append(bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç", reply_markup=markup))
            bot.register_next_step_handler(message, switchwatch, 'algebr', 'geom', "–ê–õ–ì–ï–ë–†", '–ì–ï–û–ú–ï–¢–†')

        elif message.text == '–ò–ù–§–û–†–ú':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("1 –ì–†–£–ü–üA")
            btn2 = types.KeyboardButton("2 –ì–†–£–ü–üA")
            markup.add(btn1, btn2)
            deletem.append(bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç", reply_markup=markup))
            bot.register_next_step_handler(message, switchwatch, '1g', '2g', "1 –ì–†–£–ü–üA", '2 –ì–†–£–ü–üA')

        elif message.text == '–ò–°–¢–û–†–ò–Ø':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("–í–°–ï–ú–ò–†")
            btn2 = types.KeyboardButton("–ë–ï–õ")
            markup.add(btn1, btn2)
            deletem.append(bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç", reply_markup=markup))
            bot.register_next_step_handler(message, switchwatch, 'vsem', 'bel', "–í–°–ï–ú–ò–†", '–ë–ï–õ')

        elif message.text == '–§–ò–ó–†–ê':
            bot.send_message(message.from_user.id, "–ï—Å–ª–∏ —Ç—ã —Å–µ—Ä—å—ë–∑–Ω–æ –∏—â–µ—à—å –¥–∑ –ø–æ —Ñ–∏–∑—Ä–µ, —Ç–æ —Ç—ã —Ä–µ–∞–ª —Å—É–º–∞—à–µ–¥—à–∏–π")

        elif message.text == '–ì–ï–û–ì–†–ê–§' or message.text == '–ë–ò–û–õ–û–ì' or message.text == '–§–ò–ó–ò–ö' or \
                message.text == '–•–ò–ú–ò–Ø' or message.text == '–¢–†–£–î' or message.text == '–ò–°–ö–£–°–°–¢–í':
            for i in lessonslist:
                if str(message.text) == str(i.keys())[12:len(i.keys()) - 4]:
                    watch(message, i[str(message.text)])

        elif message.text != '–ü—Ä–µ–¥–º–µ—Ç 3':
            lessons(message)
            conn.commit()

    elif status == '1':

        if message.text == "‚úè –î–æ–±–∞–≤–∏—Ç—å –¥–∑":

            lessons(message)

            cursor.execute(f"""UPDATE `mydb`.`status` SET `status` = '2' WHERE (`id` = {message.from_user.id})""")
            conn.commit()

        elif message.text == 'üî¥ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∑':

            lessons(message)

            cursor.execute(f"""UPDATE `mydb`.`status` SET `status` = '3' WHERE (`id` = {message.from_user.id})""")
            conn.commit()

        elif message.text == '/start':
            basemenu(message)

        elif message.text == '‚ùî –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–æ—Ç?':
            bot.send_message(message.from_user.id, f"–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ. –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–º–∞—à–Ω–µ–µ "
                                                   f"–∑–∞–¥–∞–Ω–∏–µ, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ '‚úè –î–æ–±–∞–≤–∏—Ç—å –¥–∑'. –î–∞–ª–µ–µ –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç "
                                                   f"–ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –¥–∑. –î–∞–ª–µ–µ –≤—ã –¥–æ–ª–∂–Ω—ã –Ω–∞–ø–∏—Å–∞—Ç—å –¥–∑ "
                                                   f"(–æ–Ω–æ –Ω–µ –¥–æ–ª–∂–Ω–æ –∏–º–µ—Ç—å –∫–∞–≤—ã—á–∫–∏ –∏–ª–∏ –±—ã—Ç—å —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–º) –∏–ª–∏ "
                                                   f"–æ—Ç–º–µ–Ω–∏—Ç—å.")

            bot.send_message(message.from_user.id, f"–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω–Ω–æ–≥–æ –¥–∑ –Ω—É–∂–Ω–æ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É"
                                                   f"'üî¥ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∑' –∏ –≤—ã–±—Ä–∞—Ç—å –Ω—É–∂–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç. –í—ã–≤–µ–¥—É—Ç—Å—è —Ç—Ä–∏ "
                                                   f"–ø–æ—Å–ª–µ–¥–Ω–µ–µ –∑–∞–ø–∏—Å–∞–Ω–Ω–æ–µ –¥–∑.")
            basemenu(message)
        else:
            basemenu(message)

def lessons(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–ê–ù–ì–õ –Ø–ó')
    btn2 = types.KeyboardButton("–†–£–°–°")
    btn3 = types.KeyboardButton("–ë–ï–õ")
    btn4 = types.KeyboardButton("–ò–ù–§–û–†–ú")
    btn5 = types.KeyboardButton("–ò–°–¢–û–†–ò–Ø")
    btn6 = types.KeyboardButton("–ú–ê–¢–ï–ú")
    btn7 = types.KeyboardButton("–ò–ù–§–û–†–ú")
    btn8 = types.KeyboardButton("–ì–ï–û–ì–†–ê–§")
    btn9 = types.KeyboardButton("–ë–ò–û–õ–û–ì")
    btn10 = types.KeyboardButton("–§–ò–ó–ò–ö")
    btn11 = types.KeyboardButton("–•–ò–ú–ò–Ø")
    btn12 = types.KeyboardButton("–¢–†–£–î")
    btn13 = types.KeyboardButton("–ò–°–ö–£–°–¢–í")
    btn14 = types.KeyboardButton("–§–ò–ó–†–ê")
    markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8, btn9, btn10, btn11, btn12, btn13, btn14)
    deletem.append(bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç", reply_markup=markup))

def basemenu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("‚úè –î–æ–±–∞–≤–∏—Ç—å –¥–∑")
    btn2 = types.KeyboardButton('üî¥ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∑')
    btn3 = types.KeyboardButton('‚ùî –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–æ—Ç?')
    markup.add(btn1, btn2, btn3)
    deletem.append(bot.send_message(message.from_user.id, f"–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é", reply_markup=markup))
def switchwatch(message, code1, code2, keyword1, keyword2):
    if message.text == keyword1:
        watch(message, code1)
    if message.text == keyword2:
        watch(message, code2)

def switchadd(message, code1, code2, keyword1, keyword2):
    if message.text == keyword1:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")
        markup.add(btn1)
        deletem.append(bot.send_message(message.from_user.id, f"–ù–∞–ø–∏—à–∏—Ç–µ –¥–∑", reply_markup=markup))
        bot.register_next_step_handler(message, adddz, code1)
    if message.text == keyword2:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")
        markup.add(btn1)
        deletem.append(bot.send_message(message.from_user.id, f"–ù–∞–ø–∏—à–∏—Ç–µ –¥–∑", reply_markup=markup))
        bot.register_next_step_handler(message, adddz, code2)


def adddz(message, work):
    if message.text == '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å':

        deletem.append(bot.send_message(message.from_user.id, f"–î–µ–π—Å—Ç–≤–∏–µ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ"))

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("‚úè –î–æ–±–∞–≤–∏—Ç—å –¥–∑")
        btn2 = types.KeyboardButton('üî¥ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∑')
        btn3 = types.KeyboardButton('‚ùî –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–æ—Ç?')
        markup.add(btn1, btn2, btn3)
        deletem.append(bot.send_message(message.from_user.id, f"–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é", reply_markup=markup))

        cursor.execute(f"""UPDATE `mydb`.`status` SET `status` = '1' WHERE (`id` = {message.from_user.id})""")
        conn.commit()

    elif message.text != '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å':
        cursor.execute(f"""INSERT ignore `mydb`.`student`(`people`,`predmet`,`homework`)VALUES('{str(message.from_user.first_name)}', '{work}', '{str(message.text)}')""")

        deletem.append(bot.send_message(message.from_user.id, f"–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–º–æ—â—å, {str(message.from_user.first_name)}"))

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("‚úè –î–æ–±–∞–≤–∏—Ç—å –¥–∑")
        btn2 = types.KeyboardButton('üî¥ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∑')
        btn3 = types.KeyboardButton('‚ùî –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–æ—Ç?')
        markup.add(btn1, btn2, btn3)
        deletem.append(bot.send_message(message.from_user.id, f"–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é", reply_markup=markup))

        i = 0
        cursor.execute(f"""SELECT homework From `mydb`.`student` WHERE (`predmet` = '{work}');""")
        rows = cursor.fetchall()
        for row in rows:
            i = i + 1
        if i >= 4:
            cursor.execute(f"""SELECT homework From `mydb`.`student` WHERE (`predmet` = '{work}');""")
            rows = cursor.fetchall()
            for row in rows:
                cursor.execute(f"""DELETE From `mydb`.`student` WHERE (`homework` = '{str(row)[2:len(row) - 4]}');""")
                break

        cursor.execute(f"""UPDATE `mydb`.`status` SET `status` = '1' WHERE (`id` = {message.from_user.id})""")
        conn.commit()

def watch(message, work):
    cursor.execute(f"""SELECT homework From `mydb`.`student` WHERE (`predmet` = '{work}');""")

    i = 0

    rows = cursor.fetchall()
    for row in rows:
        cursor.execute(f"""SELECT people From `mydb`.`student` WHERE (`homework` = '{str(row)[2:len(row) - 4]}');""")

        rows1 = cursor.fetchall()
        for row1 in rows1:
            i=1
            bot.send_message(message.from_user.id, f"--- –°–æ–∑–¥–∞–Ω–æ {str(row1)[2:len(row1) - 4]} ---\n"
                                                   f"{str(row)[2:len(row) - 4]}")
    if i == 0:
        bot.send_message(message.from_user.id, f"–ü–æ –¥–∞–Ω–Ω–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É –Ω–µ –±—ã–ª–æ –Ω–∞–ø–∏—Å–∞–Ω–Ω–æ –¥–∑")

    cursor.execute(f"""UPDATE `mydb`.`status` SET `status` = '1' WHERE (`id` = {message.from_user.id})""")

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("‚úè –î–æ–±–∞–≤–∏—Ç—å –¥–∑")
    btn2 = types.KeyboardButton('üî¥ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∑')
    btn3 = types.KeyboardButton('‚ùî –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–æ—Ç?')
    markup.add(btn1, btn2, btn3)
    deletem.append(bot.send_message(message.from_user.id, f"–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é", reply_markup=markup))

    conn.commit()

conn.commit()
bot.polling(none_stop=True, interval=0)
