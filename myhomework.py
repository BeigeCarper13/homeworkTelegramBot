import mysql
import telebot
from telebot import types
import time
import mysql.connector as sql

maindb = 'heroku_a5b02c6d58c3d21'
deletem = []
text = ''
status = ''
isadmin = ''
conn = sql.connect(host="eu-cdbr-west-03.cleardb.net", user="b8660ea738335d", password="99f21639",
                   database="heroku_a5b02c6d58c3d21", port="3306")
cursor = conn.cursor()
subobjlist = {'–ê–ù–ì–õ –Ø–ó': '–õ–∞–±–∞—á–µ–Ω—è;–•–∞–¥–∞—Ä–æ–≤–∏—á', '–†–£–°–°': '–†–£–°–° –Ø–ó;–†–£–°–° –õ–ò–¢', '–ë–ï–õ': '–ë–ï–õ –Ø–ó;–ë–ï–õ –õ–ò–¢',
              '–ò–ù–§–û–†–ú': '–ö–æ–≤–∞–ª–µ–≤—Å–∫–∞—è;–ë–æ—Ä–∫—É–Ω', '–ò–°–¢–û–†–ò–Ø': '–ë–ï–õ–ê–†–£–°–ò;–í–°–ï–ú–ò–†–ù–ê–Ø', '–ú–ê–¢–ï–ú': '–ì–ï–û–ú–ï–¢–†–ò–Ø;–ê–õ–ë–ï–ë–†–ê'}
curicurral = {'1': '–ê–ù–ì–õ –Ø–ó;–í–°–ï–ú–ò–†–ù–ê–Ø;–†–£–°–° –õ–ò–¢;–¢–†–£–î –û–ë–£–ß;–ò–°–ö–£–°–°–¢–í–û;–ë–ò–û–õ–û–ì;',
              '2': '–ë–ï–õ –Ø–ó;–ë–ò–û–õ–û–ì;–†–£–°–° –Ø–ó;–ì–ï–û–ú–ï–¢–†–ò–Ø;–ì–ï–û–ú–ï–¢–†–ò–Ø;–ê–ù–ì–õ –Ø–ó;–ì–ï–û–ì–†–ê–§;',
              '3': '–§–ò–ó–†–ê;–•–ò–ú–ò–Ø;–§–ò–ó–ò–ö;–§–ò–ó–ò–ö;–ì–ï–û–ú–ï–¢–†–ò–Ø;–ë–ï–õ –Ø–ó;–†–£–°–° –Ø–ó;',
              '4': '–•–ò–ú–ò–Ø;–§–ò–ó–†–ê;–§–ò–ó–ò–ö;–ê–õ–ë–ï–ë–†–ê;–ê–ù–ì–õ –Ø–ó;–ë–ï–õ –õ–ò–¢;',
              '5': '–ì–ï–û–ì–†–ê–§;–ë–ï–õ–ê–†–£–°–ò;–§–ò–ó–†–ê;–ë–ï–õ –õ–ò–¢;–ê–õ–ë–ï–ë–†–ê;–ê–õ–ë–ï–ë–†–ê;–ò–ù–§–û–†–ú;'}

bot = telebot.TeleBot('1876503650:AAH_sMeqFTVZx5PkW6dktrLKKJtIsPYkNck')


@bot.message_handler(content_types=['text'])
def start(message):
    conn = sql.connect(host="eu-cdbr-west-03.cleardb.net", user="b8660ea738335d", password="99f21639",
                       database="heroku_a5b02c6d58c3d21", port="3306")
    cursor = conn.cursor()
    print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.id}, id: {message.chat.id}, username: @{message.from_user.username}, "
          f"–¢–µ–∫—Å—Ç: {message.text}, name: {message.from_user.first_name}.\n")

    global status, isadmin
    try:
        cursor.execute(f"""INSERT ignore `{maindb}`.`student`(`id`,`status`,`admin`)VALUES('{message.from_user.id}', 'mainmenu', 'noadmin')""")
    except mysql.connector.errors.OperationalError:
        print("mysql –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")

    cursor.execute(f"""SELECT status From `{maindb}`.`student` WHERE (`id` = {message.from_user.id});""")
    check = cursor.fetchall()
    for check0 in check:
        status = str(check0)[2:len(check0) - 4]

    cursor.execute(f"""SELECT admin From `{maindb}`.`student` WHERE (`id` = {message.from_user.id});""")
    check = cursor.fetchall()
    for check0 in check:
        isadmin = str(check0)[2:len(check0) - 4]
    conn.commit()
    if status == 'banned':
        bot.send_message(message.from_user.id, f"–ñ–µ–Ω—è, –∏–¥–∏ –æ—Ç—Å—é–¥–∞")
    if status == 'mainmenu' and isadmin == 'noadmin':
        if message.text == '/admin':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")
            markup.add(btn1)
            deletem.append(bot.send_message(message.from_user.id, f"–ù–∞–ø–∏—à–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ", reply_markup=markup))
            bot.register_next_step_handler(message, admincheck, )

        elif message.text == 'üóì –í–°–Å –î–ó':
            cursor.execute(
                f"""select search from `heroku_a5b02c6d58c3d21`.`student` where id = {message.from_user.id};""")
            check = cursor.fetchall()
            for check0 in check:
                if str(check0)[1:len(check0) - 3] == '1':
                    bot.send_message(message.from_user.id, f"–ó–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è...")
                else:
                    homework(message, isadmin)
        elif message.text == 'üìã –†–ê–°–ü–ò–°–ê–ù–ò–ï' or message.text == '/homework' or message.text == '/homework@Misca8bot':
            lessonslist(message, isadmin)
        elif message.text == '/basemenu':
            basemenu(message)

    if status == 'mainmenu' and isadmin == 'yesadmin':
        if message.text == '‚úè –î–û–ë–ê–í–ò–¢–¨':
            cursor.execute(f"""UPDATE `{maindb}`.`student` SET `status` = 'adding' WHERE (`id` = {message.from_user.id})""")
            conn.commit()
            lessons(message)
        if message.text == 'üóì –í–°–Å –î–ó':
            cursor.execute(f"""select search from `heroku_a5b02c6d58c3d21`.`student` where id = {message.from_user.id};""")
            check = cursor.fetchall()
            for check0 in check:
                if str(check0)[1:len(check0) - 3] == '1':
                    bot.send_message(message.from_user.id, f"–ó–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è...")
                else:
                    homework(message, isadmin)
        if message.text == 'üìã –†–ê–°–ü–ò–°–ê–ù–ò–ï' or message.text == '/homework' or message.text == '/homework@Misca8bot':
            lessonslist(message, isadmin)
        if message.text == 'üîß –ü–û–ú–ï–ù–Ø–¢–¨':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")
            markup.add(btn1)
            deletem.append(bot.send_message(message.from_user.id, f"–í–ø–∏—à–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏", reply_markup=markup))
            bot.register_next_step_handler(message, change)
        if message.text == '/basemenu':
            adminmenu(message)

    if status == 'adding' and isadmin == 'yesadmin':
        if message.text == '–ê–ù–ì–õ –Ø–ó' or message.text == '–†–£–°–°' or message.text == '–ë–ï–õ' or message.text == '–ò–ù–§–û–†–ú' \
                or message.text == '–ò–°–¢–û–†–ò–Ø' or message.text == '–ú–ê–¢–ï–ú':
            a = 0
            keyword1 = ''
            keyword2 = ''
            for i in subobjlist[message.text]:
                if i == ';':
                    a = 1
                if a == 1:
                    keyword2 += i
                if a == 0:
                    keyword1 += i
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton(f'1Ô∏è‚É£ {keyword1}')
            btn2 = types.KeyboardButton(f'2Ô∏è‚É£ {keyword2[1:len(keyword2)]}')
            btn3 = types.KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")
            markup.add(btn1, btn2, btn3)
            deletem.append(bot.send_message(message.from_user.id, f"–í—ã–±–µ—Ä–∏—Ç–µ:", reply_markup=markup))
            bot.register_next_step_handler(message, subgroups, f'1Ô∏è‚É£ {keyword1}', f'2Ô∏è‚É£ {keyword2[1:len(keyword2)]}')
        elif message.text == '‚ùå–í–´–ô–¢–ò':
            cursor.execute(
                f"""UPDATE `{maindb}`.`student` SET `status` = 'mainmenu' WHERE (`id` = {message.from_user.id})""")
            conn.commit()
            adminmenu(message)
        elif message.text == '–ì–ï–û–ì–†–ê–§' or message.text == '–ë–ò–û–õ–û–ì' or message.text == '–§–ò–ó–ò–ö' or message.text == '–•–ò–ú–ò–Ø':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")
            markup.add(btn1)
            deletem.append(bot.send_message(message.from_user.id, f"–ù–∞–ø–∏—à–∏—Ç–µ –¥–∑: ", reply_markup=markup))
            bot.register_next_step_handler(message, write, message.text)
        else:
            lessons(message)


def lessonslist(message, isitadmin):
    cursor.execute(f"""SELECT day From `{maindb}`.`list` WHERE (`number` = '0')""")
    check = cursor.fetchall()

    alllessons = []
    onelesson = ''
    a = 1

    for check0 in check:

        for i in curicurral[str(int(str(check0)[2:len(str(check0)) - 3]))]:
            if i == ';':
                alllessons.append(onelesson)
                onelesson = ''
            else:
                onelesson += i
    onelesson = '–î–ó –ù–ê –ó–ê–í–¢–†–ê:\n'

    for i in alllessons:
        if i == '–ê–ù–ì–õ –Ø–ó':
            cursor.execute(f"""SELECT text From `{maindb}`.`object` WHERE (`object` = '–õ–∞–±–∞—á–µ–Ω—è')""")
            obj = cursor.fetchall()
            for obj0 in obj:
                onelesson += f'*{a}) –ê–ù–ì–õ –Ø–ó(–õ–∞–±–∞—á–µ–Ω—è) -*  {str(obj0)[2:len(str(obj0)) - 3]}\n'
            cursor.execute(f"""SELECT text From `{maindb}`.`object` WHERE (`object` = '–•–ê–î–ê–†–û–í–ò–ß')""")
            obj = cursor.fetchall()
            for obj0 in obj:
                onelesson += f'*{a}) –ê–ù–ì–õ –Ø–ó(–•–ê–î–ê–†–û–í–ò–ß) -*  {str(obj0)[2:len(str(obj0)) - 3]}\n-\n'
                a += 1
        elif i == '–ë–ï–õ–ê–†–£–°–ò':
            cursor.execute(f"""SELECT text From `{maindb}`.`object` WHERE (`object` = '–ë–ï–õ–ê–†–£–°–ò')""")
            obj = cursor.fetchall()
            for obj0 in obj:
                onelesson += f'*{a}) –ò–°–¢–û–†–ò–Ø –ë–ï–õ–ê–†–£–°–ò -*  {str(obj0)[2:len(str(obj0)) - 3]}\n-\n'
            a += 1
        elif i == '–í–°–ï–ú–ò–†–ù–ê–Ø':
            cursor.execute(f"""SELECT text From `{maindb}`.`object` WHERE (`object` = '–í–°–ï–ú–ò–†–ù–ê–Ø')""")
            obj = cursor.fetchall()
            for obj0 in obj:
                onelesson += f'*{a}) –í–°–ï–ú–ò–†–ù–ê–Ø –ò–°–¢–û–†–ò–Ø -*  {str(obj0)[2:len(str(obj0)) - 3]}\n-\n'
            a += 1
        elif i == '–ò–ù–§–û–†–ú':
            cursor.execute(f"""SELECT text From `{maindb}`.`object` WHERE (`object` = '–ö–æ–≤–∞–ª–µ–≤—Å–∫–∞—è')""")
            obj = cursor.fetchall()
            for obj0 in obj:
                onelesson += f'*{a}) –ò–ù–§–û–†–ú(–ö–æ–≤–∞–ª–µ–≤—Å–∫–∞—è) -*  {str(obj0)[2:len(str(obj0)) - 3]}\n'
            cursor.execute(f"""SELECT text From `{maindb}`.`object` WHERE (`object` = '–ë–æ—Ä–∫—É–Ω')""")
            obj = cursor.fetchall()
            for obj0 in obj:
                onelesson += f'*{a}) –ò–ù–§–û–†–ú(–ë–æ—Ä–∫—É–Ω) -*  {str(obj0)[2:len(str(obj0)) - 3]}\n-\n'
                a += 1
        else:
            cursor.execute(f"""SELECT text From `{maindb}`.`object` WHERE (`object` = '{i}')""")
            obj = cursor.fetchall()

            for obj0 in obj:
                onelesson += f'*{a}) {i} -*  {str(obj0)[2:len(str(obj0)) - 3]}\n-\n'
                a += 1
    bot.send_message(message.chat.id, f"{onelesson[0:len(onelesson)-2]}", parse_mode="Markdown")

    alllessons.clear()
    if isitadmin == 'yesadmin' and message.chat.id == message.from_user.id:
        adminmenu(message)
    if isitadmin == 'noadmin' and message.chat.id == message.from_user.id:
        basemenu(message)


def change(message):
    if message.text == '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å':
        bot.send_message(message.from_user.id, f"–î–µ–π—Å—Ç–≤–∏–µ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ")
        lessons(message)
    else:
        cursor.execute(
            f"""Delete from {maindb}.list where lesson = '0'""")
        cursor.execute(
            f"""INSERT ignore `{maindb}`.`list`(`number`,`day`,`lesson`)VALUES('0','{message.text}','0')""")
        conn.commit()
        bot.send_message(message.from_user.id, f"–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–≤–æ–¥ –¥–∞—Ç—ã!")
        adminmenu(message)


def subgroups(message, keyword1, keyword2):
    if message.text == '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å':
        bot.send_message(message.from_user.id, f"–î–µ–π—Å—Ç–≤–∏–µ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ")
        lessons(message)
    elif message.text == keyword1 or message.text == keyword2:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")
        markup.add(btn1)
        deletem.append(bot.send_message(message.from_user.id, f"–ù–∞–ø–∏—à–∏—Ç–µ –¥–∑: ", reply_markup=markup))
        bot.register_next_step_handler(message, write, message.text[4:len(message.text)])
    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton(f'{keyword1}')
        btn2 = types.KeyboardButton(f'2Ô∏è‚É£  {keyword2[4:len(keyword2)]}')
        btn3 = types.KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")
        markup.add(btn1, btn2, btn3)
        deletem.append(bot.send_message(message.from_user.id, f"–í—ã –≤–≤–µ–ª–∏ –∫–∞–∫—é—É—é-—Ç–æ —Ö–µ—Ä–Ω—é. –í–≤–µ–¥–∏—Ç–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ: ",
                                        reply_markup=markup))
        bot.register_next_step_handler(message, subgroups, f'{keyword1}', f'{keyword2}')


def write(message, hitler):
    if message.text == '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å':
        bot.send_message(message.from_user.id, f"–î–µ–π—Å—Ç–≤–∏–µ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ")
        lessons(message)
    else:
        cursor.execute(
            f"""Delete from {maindb}.object where object = '{hitler}'""")
        cursor.execute(
            f"""INSERT ignore `{maindb}`.`object`(`object`,`text`)VALUES('{hitler}','{message.text}')""")
        conn.commit()
        bot.send_message(message.from_user.id, f"–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–≤–æ–¥ –¥–∑!")
        adminmenu(message)


def lessons(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–ê–ù–ì–õ –Ø–ó')
    btn2 = types.KeyboardButton("–†–£–°–°")
    btn3 = types.KeyboardButton("–ë–ï–õ")
    btn4 = types.KeyboardButton("–ò–ù–§–û–†–ú")
    btn5 = types.KeyboardButton("–ò–°–¢–û–†–ò–Ø")
    btn6 = types.KeyboardButton("–ú–ê–¢–ï–ú")
    btn8 = types.KeyboardButton("–ì–ï–û–ì–†–ê–§")
    btn9 = types.KeyboardButton("–ë–ò–û–õ–û–ì")
    btn10 = types.KeyboardButton("–§–ò–ó–ò–ö")
    btn11 = types.KeyboardButton("–•–ò–ú–ò–Ø")
    btn15 = types.KeyboardButton("‚ùå–í–´–ô–¢–ò")
    markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn8, btn9, btn10, btn11, btn15)
    deletem.append(bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç", reply_markup=markup))


def homework(message, isitadmin):
    a = ''
    cursor.execute(f"""UPDATE `{maindb}`.`student` SET `search` = '1' WHERE (`id` = {message.from_user.id})""")
    cursor.execute(f"""SELECT object from `{maindb}`.`object`""")
    obj = cursor.fetchall()
    for obj0 in obj:
        format = "'%M %D %Y, %H %M %S'"
        cursor.execute(
            f"""SELECT DATE_FORMAT(datatime, '%M %D %Y, %H:%m:%s') From `{maindb}`.`object` where object = '{str(obj0)[2:len(str(obj0)) - 3].upper()}'""")

        datet = cursor.fetchall()
        for datet0 in datet:

            cursor.execute(
                f"""SELECT text From `{maindb}`.`object` where object = '{str(obj0)[2:len(str(obj0)) - 3].upper()}'""")
            textt = cursor.fetchall()
            for textt0 in textt:
                a += f"*{str(obj0)[2:len(str(obj0)) - 3]} -* {str(textt0)[2:len(str(textt0)) - 3]} \n" \
                     f"-–æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ –≤ {str(datet0)[2:len(str(datet0)) - 3]}-\n\n"
    bot.send_message(message.from_user.id, a, parse_mode="Markdown")
    cursor.execute(f"""UPDATE `{maindb}`.`student` SET `search` = '0' WHERE (`id` = {message.from_user.id})""")
    if isitadmin == 'yesadmin':
        adminmenu(message)
    if isitadmin == 'noadmin':
        basemenu(message)


def basemenu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#    btn1 = types.KeyboardButton('üóì –í–°–Å –î–ó')
    btn2 = types.KeyboardButton('üìã –†–ê–°–ü–ò–°–ê–ù–ò–ï')
    markup.add(btn2)
    bot.send_message(message.from_user.id, f"–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é", reply_markup=markup)


def adminmenu(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('üóì –í–°–Å –î–ó')
    btn2 = types.KeyboardButton('‚úè –î–û–ë–ê–í–ò–¢–¨')
    btn3 = types.KeyboardButton('üìã –†–ê–°–ü–ò–°–ê–ù–ò–ï')
    btn4 = types.KeyboardButton('üîß –ü–û–ú–ï–ù–Ø–¢–¨')
    markup.add(btn1, btn2, btn3, btn4)
    bot.send_message(message.from_user.id, f"–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç–∞—Ç–æ—Ä–∞", reply_markup=markup)


def admincheck(message):
    if message.text == '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å':
        bot.send_message(message.from_user.id, f"–î–µ–π—Å—Ç–≤–∏–µ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ")
        basemenu(message)

    elif message.text == '–î–µ—Å—è—Ç–∫–∞ –¥–æ–º–æ–π':
        cursor.execute(f"""UPDATE `{maindb}`.`student` SET `admin` = 'yesadmin' WHERE (`id` = {message.from_user.id})""")
        conn.commit()
        bot.send_message(message.from_user.id, f"–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã —Å—Ç–∞–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≤ –±–æ—Ç–µ!")
        adminmenu(message)
    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")
        markup.add(btn1)
        deletem.append(bot.send_message(message.from_user.id, f"–í–∞—à –ø–∞—Ä–æ–ª—å –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É: ",
                                        reply_markup=markup))
        bot.register_next_step_handler(message, admincheck)


conn.commit()
bot.polling(none_stop=True, interval=0)
